def partition(arr, low, high):
    """
    Partition function for Quick Sort.
    Chooses the first element as the pivot.
    
    Parameters:
    arr (list): The array to be sorted.
    low (int): Starting index of the array or subarray.
    high (int): Ending index of the array or subarray.
    
    Returns:
    int: The index of the pivot after partitioning.
    """
    pivot = arr[low]
    left = low + 1
    right = high
    
    done = False
    while not done:
        while left <= right and arr[left] <= pivot:
            left = left + 1
        while arr[right] >= pivot and right >= left:
            right = right -1
        if right < left:
            done= True
        else:
            temp = arr[left]
            arr[left] = arr[right]
            arr[right] = temp
    temp = arr[low]
    arr[low] = arr[right]
    arr[right] = temp
    return right

def quick_sort(arr, low, high):
    """
    Quick Sort function.
    
    Parameters:
    arr (list): The array to be sorted.
    low (int): Starting index of the array or subarray.
    high (int): Ending index of the array or subarray.
    """
    if low < high:
        pivot_index = partition(arr, low, high)
        print(f"After partition at index {pivot_index}: {arr}")
        
        quick_sort(arr, low, pivot_index - 1)
        quick_sort(arr, pivot_index + 1, high)

# Example usage
arr = [10, 16, 8, 12, 15, 6, 3, 9, 5]
print(f"Initial array: {arr}")

quick_sort(arr, 0, len(arr) - 1)

print(f"Sorted array: {arr}")
